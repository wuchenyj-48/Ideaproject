<?xml version="1.0" encoding="utf-8"?>
<template>
    <name>viewList</name>
    <fileDir>${genBaseDir}/${moduleName}<#if subModuleName != "">/${subModuleName}</#if>/${uncamelCase(className)}</fileDir>
<fileName>${uncamelClassName}_form.html</fileName>
<content>
<![CDATA[
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>编辑表单</title>
        <style>
             .custom-form .layui-form-label { width: 120px }
             .custom-form .layui-input-block { margin-left: 150px}
        </style>
    </head>
    <body>

        <div class="layui-fluid" id="app">

            <form class="layui-form custom-form" id="editForm" lay-filter="editForm">
                <input type="hidden" name="id" class="layui-input"/>

                <#assign rowSpan=0 >
                <#-- 默认为新行标志 -->
                <#assign newRowFlag=true>
                <#list table.columns as c>
                <#if c.isEdit?? && c.isEdit == 1>
                    <#-- 正常情况下选择 属性名都以 id结尾，直接截取掉 -->
                    <#if c.isComponentType == 1 >
                        <#assign field="${c.attrName?substring(0,(c.attrName?length - 2))}" >
                    <#else>
                        <#assign field="${c.attrName}" >
                    </#if>
                    <#assign showType="${c.showType!''}">

                    <#-- 如果是新行，直接输出行和列 -->
                    <#if c.isNewRow?? && c.isNewRow == 1>
                        <#-- 如果上一个循环中没有输出 /el-row 标签，在输出新行之前输出-->
                        <#if !newRowFlag>
                </div>
                        </#if>
                <#--输出新行信息-->
                <div class="layui-row layui-col-space5 layui-form-item">
                    <div class="layui-col-xs12">
                        <label class="layui-form-label <#if c.isNull == 0>layui-required</#if>">
                             ${c.comments}
                        </label>
                        <div class="layui-input-block">
                            <#if showType == 'input'>
                            <input type="text" name="${c.attrName}" <#if c.isNull == 0>required</#if> lay-verify="${vc(c.isNull,c.validators)}" placeholder="请输入${c.comments}"
                                   autocomplete="off" class="layui-input">
                            <#elseif showType == 'textarea'>
                            <textarea name="${c.attrName}"  placeholder="请输入${c.comments}" class="layui-textarea"></textarea>
                            <#elseif showType == 'select'>
                            <select name="${c.attrName}"></select>
                            <#elseif showType == 'select_multiple'>

                            <#elseif showType == 'radio'>
                            <div id="${c.attrName}Div"></div>
                            <#elseif showType == 'checkbox'>
                            <div id="${c.attrName}Div"></div>
                            <#elseif showType == 'switch'>
                            <input type="checkbox" name="${c.attrName}" lay-skin="switch" lay-text="是|否">
                            <#elseif showType == 'date'>
                            <input type="text" name="${c.attrName}" <#if c.isNull == 0>required lay-verify="required"</#if>  placeholder="请选择${c.comments}" autocomplete="off" class="layui-input">
                            <#elseif showType == 'datetime'>
                            <input type="text" name="${c.attrName}" <#if c.isNull == 0>required lay-verify="required"</#if>  placeholder="请选择${c.comments}" autocomplete="off" class="layui-input">
                            </#if>
                        </div>
                    </div>
                </div>
                            <#assign newRowFlag=true>
                            <#assign rowSpan=0>
                            <#continue>
                    </#if>

                    <#if newRowFlag>
                <div class="layui-row layui-col-space5 layui-form-item">
                        <#assign newRowFlag=false>
                   </#if>
                   <div class="layui-col-xs${c.colSpan}">
                        <label class="layui-form-label <#if c.isNull == 0>layui-required</#if>">
                             ${c.comments}
                        </label>
                        <div class="layui-input-block">
                            <#if showType == 'input'>
                            <input type="text" name="${c.attrName}" <#if c.isNull == 0>required</#if> lay-verify="${vc(c.isNull,c.validators)}" placeholder="请输入${c.comments}"
                                   autocomplete="off" class="layui-input">
                            <#elseif showType == 'textarea'>
                            <textarea name="${c.attrName}"  placeholder="请输入${c.comments}" class="layui-textarea"></textarea>
                            <#elseif showType == 'select'>
                            <select name="${c.attrName}"></select>
                            <#elseif showType == 'select_multiple'>

                            <#elseif showType == 'radio'>
                            <div id="${c.attrName}Div"></div>
                            <#elseif showType == 'checkbox'>
                            <div id="${c.attrName}Div"></div>
                            <#elseif showType == 'switch'>
                            <input type="checkbox" name="${c.attrName}" lay-skin="switch" lay-text="是|否">
                            <#elseif showType == 'date'>
                            <input type="text" name="${c.attrName}" <#if c.isNull == 0>required lay-verify="required"</#if>  placeholder="请选择${c.comments}" autocomplete="off" class="layui-input">
                            <#elseif showType == 'datetime'>
                            <input type="text" name="${c.attrName}" <#if c.isNull == 0>required lay-verify="required"</#if>   placeholder="请选择${c.comments}" autocomplete="off" class="layui-input">
                            </#if>
                        </div>
                   </div>

                        <#assign rowSpan = rowSpan + c.colSpan?number >
                        <#if (rowSpan >= 12)>
                </div>
                            <#assign rowSpan=0 >
                            <#assign newRowFlag=true>
                        </#if>
                    </#if>
                </#list>
                <#if newRowFlag != true>
                </div>
                </#if>
                <div class="block"></div>
                <div class="layui-row ">
                    <div class="layui-form-item">
                        <div class="layui-input-block">
                            <button class="layui-btn layui-btn-sm layui-btn-normal" lay-submit lay-filter="*">保存</button>
                            <button class="layui-btn layui-btn-sm layui-btn-primary form-reset" type="button">重置</button>
                            <button class="layui-btn layui-btn-sm layui-btn-primary form-close" type="button">关闭</button>
                        </div>
                    </div>
                </div>
            </form>


            <#if (childTableList?size > 0)>
            <#-- 加载子表表格   -->
                <#list childTableList as t>
            <div class="layui-tab child-tab">
                <ul class="layui-tab-title">
                    <li class="layui-this">${t.functionName}管理</li>
                </ul>
                <div class="layui-tab-content">
                    <div class="layui-tab-item layui-show">
                        <div id="${t.className?uncap_first}Toolbar">
                            <button type="button" class="layui-btn layui-btn-sm layui-btn-primary" lay-event="addNewLine">
                                <i class="layui-icon layui-icon-add-1"></i> 增行
                            </button>
                            <button type="button" class="layui-btn layui-btn-sm layui-btn-primary" lay-event="batchSave">
                                <i class="layui-icon layui-icon-save"></i> 批量保存
                            </button>
                            <button type="button" class="layui-btn layui-btn-sm layui-btn-primary" lay-event="refresh">
                                <i class="layui-icon layui-icon-refresh"></i> 刷新
                            </button>
                        </div>
                        <div class="row-edit-table" id="${uncamelCase(t.className)}_table" lay-filter="${uncamelCase(t.className)}_table"></div>
                    </div>
                </div>
            </div>
                </#list>
            </#if>
        </div>

        <#-- 子表管理模板 开始  -->
        <#if (childTableList?size > 0)>
            <#list childTableList as t>
                <#--
                <#list t.columns as c>
                    <#if c.isEdit?? && c.isEdit == 1  && (c.showType != 'input' && c.showType != 'textarea')>
                        <#assign showType="${c.showType!''}">
                        <#if showType == "select" || showType == "select_multiple" || showType == "checkbox" || showType == "radio" || showType == "switch">
        <script type="text/html" id="${c.attrName}Tpl">
            <select data-name="${c.attrName}" lay-filter="${c.attrName}" lay-event="${c.attrName}"
                    data-index="{{d.LAY_TABLE_INDEX}}">
                 <option value=''>请选择</option>
                {{# layui.each($global.getDictDataList('${c.dictType!''}'), function(index, item){ }}
                <option value="{{item.value}}" {{item.value== d.testSelect ?
                'selected' : ''}}>{{item.label}}</option>
                {{# }) }}
            </select>
        </script>
                        <#elseif showType == 'input' || showType == 'textarea'>
        <script type="text/html" id="${c.attrName}Tpl">
            <input type="text" data-name="${c.attrName}" value="{{d.${c.attrName} ? d.${c.attrName} : ''}}" lay-filter="${c.attrName}"
                   data-index="{{d.LAY_TABLE_INDEX}}" lay-verify="${vc(c.isNull,c.validators)}" <#if c.isNull?? && c.isNull == 0>placeholder="必填"</#if> <#if c.isNull?? && c.isNull == 1>placeholder="选填"</#if>
                   class="layui-input custom-input"/>
        </script>
                        </#if>
                    </#if>
                </#list>
                -->
        <script type="text/html" id="${t.className?uncap_first}CellToolbar">
            {{#  if($strings.isBlank(d.id)){ }}
            <a class="layui-btn layui-btn-xs layui-btn-normal" lay-event="newEdit" title="保存"><i
                    class="fa fa-check"></i></a>
            <a class="layui-btn layui-btn-xs layui-btn-normal" lay-event="newDel" title="删除"><i
                    class="fa fa-trash-o"></i></a>
            {{#  } else { }}
            <a class="layui-btn layui-btn-xs layui-btn-normal" lay-event="edit" title="保存"><i
                    class="fa fa-save"></i></a>
            <a class="layui-btn layui-btn-xs layui-btn-danger" lay-event="del" title="删除"><i
                    class="fa fa-trash-o"></i></a>
            {{#  } }}
        </script>
            </#list>
        </#if>
        <!-- 子表管理模板 结束  -->

        <script src="/scripts/utils/common.js"></script>
        <script>

            let mainFunction = () => {
                let form = layui.form, $ = layui.$, table = layui.table, layer = layui.layer

                let model = {}

                <#if (childTableList?size > 0)>
                // 加载子表表格
                    <#list childTableList as t>
                window.reload${t.className}Table = (loadChildTableByHttp  = false) => {
                    if ($strings.isBlank(model.id)) {
                        return
                    }
                    let options = {
                        id: "${uncamelCase(t.className)}_table",
                        elem: '#${uncamelCase(t.className)}_table',
                        data: [],
                        height: 300,
                        cols: [[
                            {type: 'numbers', align: 'center'},
                            <#list t.columns as c>
                                <#if c.isEdit?? && c.isEdit == 1>
                                    <#assign showType="${c.showType!''}">
                                    <#if showType == "select" || showType == "select_multiple" || showType == "radio" || showType == "switch">
                            { field: '${c.attrName}', title: '${c.comments}', align: 'center', editConfig: { form: "select", verify: "${vc(c.isNull,c.validators)}", dict: "${c.dictType}" } },
                                    <#elseif showType == 'checkbox'>
                            { field: '${c.attrName}', title: '${c.comments}', align: 'center', editConfig: { form: "checkbox" } },
                                    <#else>
                            { field: '${c.attrName}', title: '${c.comments}', align: 'center', editConfig: { form: "input", verify: "${vc(c.isNull,c.validators)}", placeholder: "${ (c.isNull?? && c.isNull == 0) ? string('必填','选填') }" } },
                                    </#if>
                                </#if>
                            </#list>
                            {field: 'LAY_CELL_TOOLBAR', title: '操作', align: 'center', templet: "#${t.className?uncap_first}CellToolbar"},
                        ]]
                    }
                     if (!loadChildTableByHttp) {
                        // 如果不需要通过请求的方式加载表格（一般情况下 主表新增后 不需要从后台拉取数据）
                        table.render(options);
                        $editable.watch('${uncamelCase(t.className)}_table')
                        return
                    }
                    $http.get(`/${t.moduleName}<#if t.subModuleName != "">/${t.subModuleName}</#if>/${uncamelCase(t.className)}s/list?${camelCase(t.parentTableFkName)}=${r"$"}{model.id}`).then(resp => {
                        options.data = resp.data.data
                        table.render(options);
                        $editable.watch('${uncamelCase(t.className)}_table')
                    })
                    </#list>
                }
                </#if>

                 /**
                 * 初始化表单
                 * @param formData 表单数据
                 * @param loadChildTableByHttp  通过http请求的方式加载子表数据
                 * */
                window.initForm = (formData, loadChildTableByHttp = true) => {
                    // 必须要重新创建对象，原因未知
                    model = $.extend({}, formData)
                    $(".form-reset").click()
                    form.val("editForm", model)

                    <#list table.columns as c>
                        <#if c.isEdit?? && c.isEdit == 1 && c.showType?? && (c.showType == 'radio' || c.showType == 'checkbox')>
                    // 必须先清除，否则赋值的时候会选中第一个checkbox
                    let ${c.attrName} = $strings.defaultString(model.${c.attrName}).split(",")
                    $(`[name='${c.attrName}']`).removeAttr("checked")
                    ${c.attrName}.forEach(o => $(`[name='${c.attrName}'][value='${o}']`).prop("checked", "checked"))
                    form.render("checkbox")
                        </#if>
                    </#list>

                    if (model.isNew) {
                        $(".child-tab").hide()
                        $(".form-reset").show()
                    } else {
                        $(".child-tab").show()
                        $(".form-reset").hide()
                        <#list childTableList as t>
                        window.reload${t.className}Table && window.reload${t.className}Table(loadChildTableByHttp)
                        </#list>
                    }
                }

                // 渲染下拉框 数据
                <#list table.columns as c>
                    <#if c.isEdit?? && c.isEdit == 1 && c.showType?? && c.showType == 'select'>
                $("select[name='${c.attrName}']").empty()
                        <#if c.isNull == 1>
                $("select[name='${c.attrName}']").append('<option>请选择</option>')
                        </#if>
                $global.getDictDataList('${c.dictType!""}').forEach(o => {
                    $("select[name='${c.attrName}']").append("<option value='" + o.value + "'>" + o.label + "</option>")
                })
                    </#if>
                </#list>
                form.render('select')

                // 渲染单选框/多选框 数据
                <#list table.columns as c>
                    <#if c.isEdit?? && c.isEdit == 1 && c.showType?? && (c.showType == 'radio' || c.showType == 'checkbox')>
                $("#${c.attrName}Div").empty()
                        <#if c.isNull == 1>
                $("#${c.attrName}Div").append('<option>请选择</option>')
                        </#if>
                $global.getDictDataList('${c.dictType!""}').forEach(o => {
                    $("#${c.attrName}Div").append(`<input type="${c.showType}" name="${c.attrName}" value="${r"$"}{o.value}" title="${r"$"}{o.label}" /> `)
                })
                    </#if>
                </#list>
                form.render('radio')

                // 渲染日期、时间 数据
                <#list table.columns as c>
                    <#if c.isEdit?? && c.isEdit == 1 && c.showType?? && (c.showType == 'date' || c.showType == 'datetime')>
                layui.laydate.render({elem: "input[name='${c.attrName}']", type: '${c.showType}',trigger: 'click'});
                    </#if>
                </#list>


                <#list childTableList as t>
                /*** 子表管理开始 */
                $("#${t.className?uncap_first}Toolbar button[lay-event='addNewLine']").click(() => {
                    table.addRow('${uncamelCase(t.className)}_table', 0, {})
                    form.render('select')
                })

                $("#${t.className?uncap_first}Toolbar button[lay-event='batchSave']").click(() => {
                    $editable.validateAllRows('${uncamelCase(t.className)}_table', (valid, errors) => {
                        if (!valid) {
                            return
                        }
                        let rows = table.getRows('${uncamelCase(t.className)}_table')
                        rows.forEach(o => o.${camelCase(t.parentTableFkName)} = model.id)
                        $http.put("/${t.moduleName}<#if t.subModuleName != "">/${t.subModuleName}</#if>/${uncamelCase(t.className)}s/batch_save", rows).then(resp => {
                            if (resp.data.success) {
                                layer.success(resp.data.msg)
                                window.reload${t.className}Table(true)
                            } else {
                                layer.error(resp.data.msg)
                            }
                        })
                    })
                })

                $("#${t.className?uncap_first}Toolbar button[lay-event='refresh']").click(() => {
                    window.reload${t.className}Table(true)
                })


                // 监听子表的列工具栏
                table.on('tool(${uncamelCase(t.className)}_table)', function (obj) {
                    // 获取行索引
                    let rowIndex = obj.tr[0].getAttribute("data-index")
                    let data = obj.data
                    if (obj.event === 'newDel') {
                        // 未在数据库中存在，直接从界面移除即可
                        table.deleteRow('${uncamelCase(t.className)}_table', rowIndex)
                        return
                    }
                    if (obj.event === 'del') {
                        layer.confirm('真的删除行么', function (index) {
                            $http.delete(`/${t.moduleName}<#if t.subModuleName != "">/${t.subModuleName}</#if>/${uncamelCase(t.className)}s/` + data.id).then(resp => {
                                layer.success(resp.data.msg)
                                table.deleteRow('${uncamelCase(t.className)}_table', rowIndex)
                            })
                        });
                        return
                    }

                    // 校验并保存
                    $editable.validateSingleRow("${uncamelCase(t.className)}_table", rowIndex, (valid, error) => {
                        if (!valid) {
                            return
                        }
                        let data = table.cache.${uncamelCase(t.className)}_table[rowIndex]
                        data.${camelCase(t.parentTableFkName)}= model.id
                        let promise = null
                        if ($strings.isBlank(data.id)) {
                            promise = $http.post("/${t.moduleName}<#if t.subModuleName != "">/${t.subModuleName}</#if>/${uncamelCase(t.className)}s/", data)
                        } else {
                            promise = $http.put("/${t.moduleName}<#if t.subModuleName != "">/${t.subModuleName}</#if>/${uncamelCase(t.className)}s/", data)
                        }

                        promise.then(resp => {
                            if (resp.data.success) {
                                layer.success(resp.data.msg)

                                // 重新渲染单行数据
                                table.renderSpecRow('${uncamelCase(t.className)}_table', rowIndex, {
                                    id: resp.data.data.id
                                })
                            } else {
                                layer.error(resp.data.msg)
                            }
                        })
                    })
                });

                /*** 子表管理结束 */
                </#list>

                $(".form-reset").click(() => {
                    $("#editForm")[0].reset()
                    $("#editForm").find("input[type='hidden']").val('')
                    $("#editForm").find("input[type='checkbox'],input[type='radio']").removeAttr("checked")
                    form.render(null, "editForm")
                })
                $(".form-close").click(() => {
                    let index = parent.layer.getFrameIndex(window.name)
                    parent.layer.close(index)
                })

                // 监听表单提交事件
                form.on('submit(*)', (data) => {
                    data.field = $.extend({}, data.field)
                     <#list table.columns as c>
                     <#if c.isEdit?? && c.isEdit == 1 && c.showType?? && (c.showType == 'checkbox')>
                    data.field.${c.attrName} = $("[name='${c.attrName}']:checked").map((index, elem) => $(elem).val()).get().join()
                        </#if>
                    </#list>
                    let promise = null
                    if ($strings.isBlank(data.field.id)) {
                        promise = $http.post("/${moduleName}<#if subModuleName != "">/${subModuleName}</#if>/${uncamelClassName}s", data.field)
                    } else {
                        promise = $http.put("/${moduleName}<#if subModuleName != "">/${subModuleName}</#if>/${uncamelClassName}s", data.field)
                    }

                    promise.then(resp => {
                        if (!resp.data.success) {
                           layer.error(resp.data.msg)
                           return
                        }
                        layer.success(resp.data.msg)
                        if($strings.isBlank(model.id)){
                            initForm(resp.data.data, false)
                        }
                        parent.reloadTable()
                    })

                    return false;
                });
            }

            extendParentScriptsAndStyles(() => {
                loadSingleJs("/scripts/utils/editable.js", mainFunction)
            })

        </script>

    </body>
</html>
    ]]>
</content>
</template>


